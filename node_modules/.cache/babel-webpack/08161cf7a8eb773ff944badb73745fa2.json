{"ast":null,"code":"import { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { from } from '../observable/from';\nimport { operate } from '../util/lift';\nexport function share(options) {\n  options = options || {};\n  var _options = options,\n      _options$connector = _options.connector,\n      connector = _options$connector === void 0 ? function () {\n    return new Subject();\n  } : _options$connector,\n      _options$resetOnCompl = _options.resetOnComplete,\n      resetOnComplete = _options$resetOnCompl === void 0 ? true : _options$resetOnCompl,\n      _options$resetOnError = _options.resetOnError,\n      resetOnError = _options$resetOnError === void 0 ? true : _options$resetOnError,\n      _options$resetOnRefCo = _options.resetOnRefCountZero,\n      resetOnRefCountZero = _options$resetOnRefCo === void 0 ? true : _options$resetOnRefCo;\n  var connection = null;\n  var subject = null;\n  var refCount = 0;\n  var hasCompleted = false;\n  var hasErrored = false;\n\n  var reset = function reset() {\n    connection = subject = null;\n    hasCompleted = hasErrored = false;\n  };\n\n  return operate(function (source, subscriber) {\n    refCount++;\n    subject = subject !== null && subject !== void 0 ? subject : connector();\n    subscriber.add(function () {\n      refCount--;\n\n      if (resetOnRefCountZero && !refCount && !hasErrored && !hasCompleted) {\n        var conn = connection;\n        reset();\n        conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n      }\n    });\n    subject.subscribe(subscriber);\n\n    if (!connection) {\n      connection = new SafeSubscriber({\n        next: function next(value) {\n          return subject.next(value);\n        },\n        error: function error(err) {\n          hasErrored = true;\n          var dest = subject;\n\n          if (resetOnError) {\n            reset();\n          }\n\n          dest.error(err);\n        },\n        complete: function complete() {\n          hasCompleted = true;\n          var dest = subject;\n\n          if (resetOnComplete) {\n            reset();\n          }\n\n          dest.complete();\n        }\n      });\n      from(source).subscribe(connection);\n    }\n  });\n} //# sourceMappingURL=share.js.map","map":{"version":3,"sources":["C:/Users/akafl/Documents/dwj-projet6-master/node_modules/rxjs/dist/esm/internal/operators/share.js"],"names":["Subject","SafeSubscriber","from","operate","share","options","connector","resetOnComplete","resetOnError","resetOnRefCountZero","connection","subject","refCount","hasCompleted","hasErrored","reset","source","subscriber","add","conn","unsubscribe","subscribe","next","value","error","err","dest","complete"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwB;AAC3BA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,iBAAqHA,OAArH;AAAA,oCAAQC,SAAR;AAAA,MAAQA,SAAR,mCAAoB;AAAA,WAAM,IAAIN,OAAJ,EAAN;AAAA,GAApB;AAAA,uCAAyCO,eAAzC;AAAA,MAAyCA,eAAzC,sCAA2D,IAA3D;AAAA,uCAAiEC,YAAjE;AAAA,MAAiEA,YAAjE,sCAAgF,IAAhF;AAAA,uCAAsFC,mBAAtF;AAAA,MAAsFA,mBAAtF,sCAA4G,IAA5G;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,UAAU,GAAG,KAAjB;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBL,IAAAA,UAAU,GAAGC,OAAO,GAAG,IAAvB;AACAE,IAAAA,YAAY,GAAGC,UAAU,GAAG,KAA5B;AACH,GAHD;;AAIA,SAAOX,OAAO,CAAC,UAACa,MAAD,EAASC,UAAT,EAAwB;AACnCL,IAAAA,QAAQ;AACRD,IAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmDL,SAAS,EAAtE;AACAW,IAAAA,UAAU,CAACC,GAAX,CAAe,YAAM;AACjBN,MAAAA,QAAQ;;AACR,UAAIH,mBAAmB,IAAI,CAACG,QAAxB,IAAoC,CAACE,UAArC,IAAmD,CAACD,YAAxD,EAAsE;AAClE,YAAMM,IAAI,GAAGT,UAAb;AACAK,QAAAA,KAAK;AACLI,QAAAA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACC,WAAL,EAA5C;AACH;AACJ,KAPD;AAQAT,IAAAA,OAAO,CAACU,SAAR,CAAkBJ,UAAlB;;AACA,QAAI,CAACP,UAAL,EAAiB;AACbA,MAAAA,UAAU,GAAG,IAAIT,cAAJ,CAAmB;AAC5BqB,QAAAA,IAAI,EAAE,cAACC,KAAD;AAAA,iBAAWZ,OAAO,CAACW,IAAR,CAAaC,KAAb,CAAX;AAAA,SADsB;AAE5BC,QAAAA,KAAK,EAAE,eAACC,GAAD,EAAS;AACZX,UAAAA,UAAU,GAAG,IAAb;AACA,cAAMY,IAAI,GAAGf,OAAb;;AACA,cAAIH,YAAJ,EAAkB;AACdO,YAAAA,KAAK;AACR;;AACDW,UAAAA,IAAI,CAACF,KAAL,CAAWC,GAAX;AACH,SAT2B;AAU5BE,QAAAA,QAAQ,EAAE,oBAAM;AACZd,UAAAA,YAAY,GAAG,IAAf;AACA,cAAMa,IAAI,GAAGf,OAAb;;AACA,cAAIJ,eAAJ,EAAqB;AACjBQ,YAAAA,KAAK;AACR;;AACDW,UAAAA,IAAI,CAACC,QAAL;AACH;AAjB2B,OAAnB,CAAb;AAmBAzB,MAAAA,IAAI,CAACc,MAAD,CAAJ,CAAaK,SAAb,CAAuBX,UAAvB;AACH;AACJ,GAlCa,CAAd;AAmCH,C,CACD","sourcesContent":["import { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { from } from '../observable/from';\nimport { operate } from '../util/lift';\nexport function share(options) {\n    options = options || {};\n    const { connector = () => new Subject(), resetOnComplete = true, resetOnError = true, resetOnRefCountZero = true } = options;\n    let connection = null;\n    let subject = null;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n    const reset = () => {\n        connection = subject = null;\n        hasCompleted = hasErrored = false;\n    };\n    return operate((source, subscriber) => {\n        refCount++;\n        subject = subject !== null && subject !== void 0 ? subject : connector();\n        subscriber.add(() => {\n            refCount--;\n            if (resetOnRefCountZero && !refCount && !hasErrored && !hasCompleted) {\n                const conn = connection;\n                reset();\n                conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n            }\n        });\n        subject.subscribe(subscriber);\n        if (!connection) {\n            connection = new SafeSubscriber({\n                next: (value) => subject.next(value),\n                error: (err) => {\n                    hasErrored = true;\n                    const dest = subject;\n                    if (resetOnError) {\n                        reset();\n                    }\n                    dest.error(err);\n                },\n                complete: () => {\n                    hasCompleted = true;\n                    const dest = subject;\n                    if (resetOnComplete) {\n                        reset();\n                    }\n                    dest.complete();\n                },\n            });\n            from(source).subscribe(connection);\n        }\n    });\n}\n//# sourceMappingURL=share.js.map"]},"metadata":{},"sourceType":"module"}